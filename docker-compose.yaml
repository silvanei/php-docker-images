version: '3'
services:
  nginx:
    image: nginx:latest
    container_name: "nginx"
    environment:
      - TZ=America/Sao_Paulo
    ports:
      - "80:80"
      - "443:443"
    restart: always
    working_dir: /var/www
    volumes:
      - ./../:/var/www
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /var/log/nginx:/var/log/nginx
      - /etc/hosts:/etc/hosts:ro
    depends_on:
      - fpm-56
      - fpm-70
      - fpm-71
      - fpm-72
      - fpm-73
      - fpm-74
  fpm-56:
    image: webdev:5.6-fpm
    build: 5.6/
    container_name: "5.6-fpm"
    environment:
      - TZ=America/Sao_Paulo
    restart: always
    working_dir: /var/www
    volumes:
      - ./../:/var/www
      - /tmp:/tmp
      - /etc/hosts:/etc/hosts:ro
  fpm-72:
    image: webdev:7.2-fpm
    build: 7.2/
    container_name: "7.2-fpm"
    environment:
      - TZ=America/Sao_Paulo
    restart: always
    working_dir: /var/www
    volumes:
      - ./../:/var/www
      - /tmp:/tmp
      - /etc/hosts:/etc/hosts:ro
  fpm-70:
    image: webdev:7.0-fpm
    build: 7.0/
    container_name: "7.0-fpm"
    environment:
      - TZ=America/Sao_Paulo
    restart: always
    working_dir: /var/www
    volumes:
      - ./../:/var/www
      - /tmp:/tmp
      - /etc/hosts:/etc/hosts:ro
  fpm-71:
    image: webdev:7.1-fpm
    build: 7.1/
    container_name: "7.1-fpm"
    environment:
      - TZ=America/Sao_Paulo
    restart: always
    working_dir: /var/www
    volumes:
      - ./../:/var/www
      - /tmp:/tmp
      - /etc/hosts:/etc/hosts:ro
  fpm-73:
    image: webdev:7.3-fpm
    build: 7.3/
    container_name: "7.3-fpm"
    environment:
      - TZ=America/Sao_Paulo
    restart: always
    working_dir: /var/www
    volumes:
      - ./../:/var/www
      - /tmp:/tmp
      - /etc/hosts:/etc/hosts:ro
  fpm-74:
    image: webdev:7.4-fpm
    build: 7.4/
    container_name: "7.4-fpm"
    environment:
      - TZ=America/Sao_Paulo
    restart: always
    working_dir: /var/www
    volumes:
      - ./../:/var/www
      - /tmp:/tmp
      - /etc/hosts:/etc/hosts:ro

  # docker volume create portainer_data
  # docker run -d -p 81:9000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer
  portainer:
    image: portainer/portainer:latest
    container_name: "portainer"
    restart: always
    ports:
      - "81:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  portainer_data:
